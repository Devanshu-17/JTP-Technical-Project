{"ast":null,"code":"var _jsxFileName = \"/Users/devanshu/Desktop/JTP/Food_rec/frontend/src/Recommend/IngredientInput.js\",\n  _s = $RefreshSig$();\n// src/IngredientInput.js\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IngredientInput = ({\n  onIngredientChange\n}) => {\n  _s();\n  const [ingredients, setIngredients] = useState('');\n  const handleIngredientChange = event => {\n    const value = event.target.value;\n    setIngredients(value);\n    onIngredientChange(value.split(',').map(ingredient => ingredient.trim()));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hero__title\",\n      style: {\n        paddingTop: '160px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"What Ingredients do you have in hand?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ingredient-input\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"title\",\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Ingredients\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Type ingredients separated by commas\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                spellCheck: \"false\",\n                onChange: handleIngredientChange,\n                value: ingredients\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 3\n  }, this);\n};\n_s(IngredientInput, \"9CKo/9NPxnLvMaYtrMBEkGc20is=\");\n_c = IngredientInput;\nexport default IngredientInput;\nvar _c;\n$RefreshReg$(_c, \"IngredientInput\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","IngredientInput","onIngredientChange","_s","ingredients","setIngredients","handleIngredientChange","event","value","target","split","map","ingredient","trim","children","className","style","paddingTop","fileName","_jsxFileName","lineNumber","columnNumber","type","spellCheck","onChange","_c","$RefreshReg$"],"sources":["/Users/devanshu/Desktop/JTP/Food_rec/frontend/src/Recommend/IngredientInput.js"],"sourcesContent":["// src/IngredientInput.js\nimport React, { useState } from 'react';\n\nconst IngredientInput = ({ onIngredientChange }) => {\n const [ingredients, setIngredients] = useState('');\n\n const handleIngredientChange = (event) => {\n    const value = event.target.value;\n    setIngredients(value);\n    onIngredientChange(value.split(',').map(ingredient => ingredient.trim()));\n };\n\n return (\n  <div>\n  <div className=\"hero__title\" style={{ paddingTop: '160px' }}>\n        <h2>What Ingredients do you have in hand?</h2>\n      </div>\n    <div className=\"ingredient-input\">\n      <div className=\"container\">\n        <div className=\"wrapper\">\n          <div className=\"title\">\n            <h2>Ingredients</h2>\n          </div>\n          <div className=\"content\">\n            <p>Type ingredients separated by commas</p>\n            <ul>\n              <input type=\"text\" spellCheck=\"false\" onChange={handleIngredientChange} value={ingredients} />\n            </ul>\n          </div>\n        </div> \n      </div>\n    </div>\n    </div>\n );\n};\n\nexport default IngredientInput;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,eAAe,GAAGA,CAAC;EAAEC;AAAmB,CAAC,KAAK;EAAAC,EAAA;EACnD,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMQ,sBAAsB,GAAIC,KAAK,IAAK;IACvC,MAAMC,KAAK,GAAGD,KAAK,CAACE,MAAM,CAACD,KAAK;IAChCH,cAAc,CAACG,KAAK,CAAC;IACrBN,kBAAkB,CAACM,KAAK,CAACE,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACC,UAAU,IAAIA,UAAU,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC;EAC5E,CAAC;EAED,oBACCb,OAAA;IAAAc,QAAA,gBACAd,OAAA;MAAKe,SAAS,EAAC,aAAa;MAACC,KAAK,EAAE;QAAEC,UAAU,EAAE;MAAQ,CAAE;MAAAH,QAAA,eACtDd,OAAA;QAAAc,QAAA,EAAI;MAAqC;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,eACRrB,OAAA;MAAKe,SAAS,EAAC,kBAAkB;MAAAD,QAAA,eAC/Bd,OAAA;QAAKe,SAAS,EAAC,WAAW;QAAAD,QAAA,eACxBd,OAAA;UAAKe,SAAS,EAAC,SAAS;UAAAD,QAAA,gBACtBd,OAAA;YAAKe,SAAS,EAAC,OAAO;YAAAD,QAAA,eACpBd,OAAA;cAAAc,QAAA,EAAI;YAAW;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjB,CAAC,eACNrB,OAAA;YAAKe,SAAS,EAAC,SAAS;YAAAD,QAAA,gBACtBd,OAAA;cAAAc,QAAA,EAAG;YAAoC;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,eAC3CrB,OAAA;cAAAc,QAAA,eACEd,OAAA;gBAAOsB,IAAI,EAAC,MAAM;gBAACC,UAAU,EAAC,OAAO;gBAACC,QAAQ,EAAElB,sBAAuB;gBAACE,KAAK,EAAEJ;cAAY;gBAAAc,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC5F,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEV,CAAC;AAAClB,EAAA,CA/BIF,eAAe;AAAAwB,EAAA,GAAfxB,eAAe;AAiCrB,eAAeA,eAAe;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}