{"ast":null,"code":"var _jsxFileName = \"/Users/devanshu/Desktop/JTP/Food_rec/react/foodinator-react/src/Recommend.js\",\n  _s = $RefreshSig$();\n// src/Recommend.js\nimport React, { useState } from 'react';\nimport Header from './Home/Header';\nimport Footer from './Home/Footer';\nimport FoodTypeCards from './Recommend/FoodTypeCards';\nimport AllergyCards from './Recommend/AllergyCards';\nimport HealthSliders from './Recommend/HealthSliders';\nimport IngredientInput from './Recommend/IngredientInput';\nimport SubmitButton from './Recommend/SubmitButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Recommend() {\n  _s();\n  const [foodType, setFoodType] = useState('');\n  const [allergies, setAllergies] = useState([]);\n  const [healthPreferences, setHealthPreferences] = useState({\n    carbohydrate: 50,\n    protein: 50,\n    fat: 50\n  });\n  const [ingredients, setIngredients] = useState([]);\n  const handleFoodTypeChange = type => {\n    setFoodType(type);\n  };\n  const handleAllergyChange = allergy => {\n    setAllergies([...allergies, allergy]);\n  };\n  const handleSliderChange = (name, value) => {\n    setHealthPreferences({\n      ...healthPreferences,\n      [name]: value\n    });\n  };\n  const handleIngredientChange = ingredients => {\n    setIngredients(ingredients);\n  };\n  const handleSubmit = () => {\n    const userInput = {\n      food_type: foodType,\n      allergies: allergies,\n      ingredients: ingredients,\n      calories: healthPreferences.carbohydrate,\n      // Assuming calories is represented by carbohydrate ratio\n      fat_content: healthPreferences.fat,\n      protein_content: healthPreferences.protein\n    };\n    fetch('/recommend/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(userInput)\n    }).then(response => response.json()).then(data => {\n      console.log(data); // Log the response data to the console\n      // Here you can handle the response data as needed, e.g., display it to the user\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FoodTypeCards, {\n      onFoodTypeChange: handleFoodTypeChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AllergyCards, {\n      onAllergyChange: handleAllergyChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HealthSliders, {\n      onSliderChange: handleSliderChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IngredientInput, {\n      onIngredientChange: handleIngredientChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SubmitButton, {\n      onClick: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(Recommend, \"9UuEsH1teY7IBNOAEkuX29AC7ng=\");\n_c = Recommend;\nexport default Recommend;\nvar _c;\n$RefreshReg$(_c, \"Recommend\");","map":{"version":3,"names":["React","useState","Header","Footer","FoodTypeCards","AllergyCards","HealthSliders","IngredientInput","SubmitButton","jsxDEV","_jsxDEV","Recommend","_s","foodType","setFoodType","allergies","setAllergies","healthPreferences","setHealthPreferences","carbohydrate","protein","fat","ingredients","setIngredients","handleFoodTypeChange","type","handleAllergyChange","allergy","handleSliderChange","name","value","handleIngredientChange","handleSubmit","userInput","food_type","calories","fat_content","protein_content","fetch","method","headers","body","JSON","stringify","then","response","json","data","console","log","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onFoodTypeChange","onAllergyChange","onSliderChange","onIngredientChange","onClick","_c","$RefreshReg$"],"sources":["/Users/devanshu/Desktop/JTP/Food_rec/react/foodinator-react/src/Recommend.js"],"sourcesContent":["// src/Recommend.js\nimport React, { useState } from 'react';\nimport Header from './Home/Header';\nimport Footer from './Home/Footer';\nimport FoodTypeCards from './Recommend/FoodTypeCards';\nimport AllergyCards from './Recommend/AllergyCards';\nimport HealthSliders from './Recommend/HealthSliders';\nimport IngredientInput from './Recommend/IngredientInput';\nimport SubmitButton from './Recommend/SubmitButton';\n\nfunction Recommend() {\n const [foodType, setFoodType] = useState('');\n const [allergies, setAllergies] = useState([]);\n const [healthPreferences, setHealthPreferences] = useState({ carbohydrate: 50, protein: 50, fat: 50 });\n const [ingredients, setIngredients] = useState([]);\n\n const handleFoodTypeChange = (type) => {\n    setFoodType(type);\n };\n\n const handleAllergyChange = (allergy) => {\n    setAllergies([...allergies, allergy]);\n };\n\n const handleSliderChange = (name, value) => {\n    setHealthPreferences({ ...healthPreferences, [name]: value });\n };\n\n const handleIngredientChange = (ingredients) => {\n    setIngredients(ingredients);\n };\n\n const handleSubmit = () => {\n    const userInput = {\n        food_type: foodType,\n        allergies: allergies,\n        ingredients: ingredients,\n        calories: healthPreferences.carbohydrate, // Assuming calories is represented by carbohydrate ratio\n        fat_content: healthPreferences.fat,\n        protein_content: healthPreferences.protein,\n    };\n\n    fetch('/recommend/', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(userInput),\n    })\n    .then(response => response.json())\n    .then(data => {\n        console.log(data); // Log the response data to the console\n        // Here you can handle the response data as needed, e.g., display it to the user\n    })\n    .catch((error) => {\n        console.error('Error:', error);\n    });\n };\n\n return (\n    <div>\n      <Header />\n      <FoodTypeCards onFoodTypeChange={handleFoodTypeChange} />\n      <AllergyCards onAllergyChange={handleAllergyChange} />\n      <HealthSliders onSliderChange={handleSliderChange} />\n      <IngredientInput onIngredientChange={handleIngredientChange} />\n      <SubmitButton onClick={handleSubmit} />\n      <Footer />\n    </div>\n );\n}\n\nexport default Recommend;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}