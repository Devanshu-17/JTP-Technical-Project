{"ast":null,"code":"var _jsxFileName = \"/Users/devanshu/Desktop/JTP/Food_rec/react/foodinator-react/src/Recommend/IngredientInput.js\",\n  _s = $RefreshSig$();\n// src/IngredientInput.js\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IngredientInput = ({\n  onIngredientChange\n}) => {\n  _s();\n  const [ingredients, setIngredients] = useState('');\n  const handleIngredientChange = event => {\n    const value = event.target.value;\n    setIngredients(value);\n    onIngredientChange(value.split(',').map(ingredient => ingredient.trim()));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ingredient-input\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Ingredients\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Type ingredients separated by commas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              spellCheck: \"false\",\n              onChange: handleIngredientChange,\n              value: ingredients\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_s(IngredientInput, \"9CKo/9NPxnLvMaYtrMBEkGc20is=\");\n_c = IngredientInput;\nexport default IngredientInput;\nvar _c;\n$RefreshReg$(_c, \"IngredientInput\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","IngredientInput","onIngredientChange","_s","ingredients","setIngredients","handleIngredientChange","event","value","target","split","map","ingredient","trim","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","spellCheck","onChange","_c","$RefreshReg$"],"sources":["/Users/devanshu/Desktop/JTP/Food_rec/react/foodinator-react/src/Recommend/IngredientInput.js"],"sourcesContent":["// src/IngredientInput.js\nimport React, { useState } from 'react';\n\nconst IngredientInput = ({ onIngredientChange }) => {\n const [ingredients, setIngredients] = useState('');\n\n const handleIngredientChange = (event) => {\n    const value = event.target.value;\n    setIngredients(value);\n    onIngredientChange(value.split(',').map(ingredient => ingredient.trim()));\n };\n\n return (\n    <div className=\"ingredient-input\">\n      <div className=\"container\">\n        <div className=\"wrapper\">\n          <div className=\"title\">\n            <h2>Ingredients</h2>\n          </div>\n          <div className=\"content\">\n            <p>Type ingredients separated by commas</p>\n            <ul>\n              <input type=\"text\" spellCheck=\"false\" onChange={handleIngredientChange} value={ingredients} />\n            </ul>\n          </div>\n        </div> \n      </div>\n    </div>\n );\n};\n\nexport default IngredientInput;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,eAAe,GAAGA,CAAC;EAAEC;AAAmB,CAAC,KAAK;EAAAC,EAAA;EACnD,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMQ,sBAAsB,GAAIC,KAAK,IAAK;IACvC,MAAMC,KAAK,GAAGD,KAAK,CAACE,MAAM,CAACD,KAAK;IAChCH,cAAc,CAACG,KAAK,CAAC;IACrBN,kBAAkB,CAACM,KAAK,CAACE,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACC,UAAU,IAAIA,UAAU,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC;EAC5E,CAAC;EAED,oBACGb,OAAA;IAAKc,SAAS,EAAC,kBAAkB;IAAAC,QAAA,eAC/Bf,OAAA;MAAKc,SAAS,EAAC,WAAW;MAAAC,QAAA,eACxBf,OAAA;QAAKc,SAAS,EAAC,SAAS;QAAAC,QAAA,gBACtBf,OAAA;UAAKc,SAAS,EAAC,OAAO;UAAAC,QAAA,eACpBf,OAAA;YAAAe,QAAA,EAAI;UAAW;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjB,CAAC,eACNnB,OAAA;UAAKc,SAAS,EAAC,SAAS;UAAAC,QAAA,gBACtBf,OAAA;YAAAe,QAAA,EAAG;UAAoC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eAC3CnB,OAAA;YAAAe,QAAA,eACEf,OAAA;cAAOoB,IAAI,EAAC,MAAM;cAACC,UAAU,EAAC,OAAO;cAACC,QAAQ,EAAEhB,sBAAuB;cAACE,KAAK,EAAEJ;YAAY;cAAAY,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5F,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAChB,EAAA,CA1BIF,eAAe;AAAAsB,EAAA,GAAftB,eAAe;AA4BrB,eAAeA,eAAe;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}